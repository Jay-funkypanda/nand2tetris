// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A basic math library.
 */
class Math {
    
    static Array powers;
    
    /** Initializes the library. */
    function void init() 
    {
        do Math.initPowers();
        return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) 
    {
        if (x < 0)
        {
            let x = -x;
        }
        return x;
    }
    
    function void initPowers()
    {
        var int i;
        var int val;
        
        let val = 1;
        let i = 0;
        
        let powers = Array.new(16);
        
        while (i < 16)
        {
            let powers[i] = val;
            let val = val + val;
            let i = i + 1;
        }
        
        return;
    }
    
    /** Returns the product of x and y. */
    function int multiply(int x, int y) 
    {
        var int i, sum, shifted_x;
        
        let sum = 0;
        let shifted_x = x;
        let i = 0;
        
        while(i < 16)
        {
            if ( (y & powers[i]) = powers[i])
            {
                let sum = sum + shifted_x;
            }
            let shifted_x = shifted_x + shifted_x;
            let i = i + 1;
        }
    
        return sum;
    }
    
    /** Returns the integer part of x/y. */
    function int divide(int x, int y) 
    {
        if (((x<0) & (y>0)) | ((x>0) & (y<0)))
        {
            return -Math.recDivide(Math.abs(x), Math.abs(y));
        }
        return Math.recDivide(Math.abs(x), Math.abs(y));
    }
    
    function int recDivide(int x, int y)
    {
        var int q;
        if (y>x)
        {
            return 0;
        }
        
        let q = Math.divide(x, 2*y);
        if ( (x-(2*q*y)) < y)
        {
            return 2*q;
        }
        else
        {
            return (2*q)+1;
        }
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) 
    {
        var int low, high, mid, square;
        let low = 0;
        //let high = (x/2)+1;
        let high = 182;
        
        while ((low+1) < high)
        {
            let mid = low + ((high-low) / 2);
            let square = mid*mid;
            
            if (square = x)
            {
                return mid;
            }
            else
            {
                if (square < x)
                {
                    let low = mid;
                }
                else
                {
                    let high = mid;
                }
            }
        }
        return low;
    }

    /** Returns the greater number. */
    function int max(int a, int b) 
    {
        if (b > a)
        {
            return b;
        }
        return a;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) 
    {
        if (b < a)
        {
            return b;        
        }
        return a;
    }
}






