// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    
    static int KBD;
    /** Initializes the keyboard. */
    function void init() 
    {
        let KBD = 24576;
        return;
    } 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() 
    {
        return Memory.peek(KBD);
    }

    /**								
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar()
    {
        var char c;
        var char d;
        do Output.printChar(0);
        do Output.moveCursorBack();
        let c = Keyboard.keyPressed(); 
        while (c = 0)
        {
            let c = Keyboard.keyPressed(); 
            if (c > 0)
            {
                   let d = c;
                   let c = Keyboard.keyPressed(); 
                   while (c > 0)
                   {
                        let c = Keyboard.keyPressed();      
                   }
                   do Output.printChar(d);
                   let c = d;
            }
        }
        return d;
    }

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message)
    {
        var String ret;
        var char c;
        var int strlen;
        
        do Output.printString(message);
        
        let c = Keyboard.readChar();
        let strlen = 64;
        let ret = String.new(strlen);
        
        while((c < String.newLine()) | (c > String.newLine()))
        {
            if (c = String.backSpace())
            {
                do ret.eraseLastChar();
            }
            else
            {
                do ret.appendChar(c);
            }
            let c = Keyboard.readChar();
        }
        
        return ret;
    }
    
//    function String get_longer_str(String s)
//    {
//        var String tmpstr;
//        var int i;
//        
//        let tmpstr = String.new(2 * s.length());
//        while (i < s.length())
//        {
//            do tmpstr.appendChar(s.charAt(i));
//            let i = i + 1;
//        }
//        do s.dispose();
//        return tmpstr;
//    }

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message)
    {
        var String ret;
    
        let ret = Keyboard.readLine(message);
        return ret.intValue();
    }
}
